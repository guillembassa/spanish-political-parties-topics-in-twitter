knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
head(toks)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
pacman::p_load(remotes,httpuv, rtweet, tidyverse )
parties_usernames <- c("ciudadanoscs","psoe", "populares","podemos","esquerra_erc", "juntsxcat", "cupnacional", "vox_es", "ehbildubizkaia", "eajpnv_congreso", "maspais_es", "coalicion", "teruelexiste_", "oloque", "prcantabria")
#data_parties <- get_timelines(parties_usernames, n = 3200 )
#save_as_csv(data_parties, "C:/Users/Guillem/Documents/GitHub/spanish-political-parties-topics-in-twitter/database.csv")
data_parties <-read.csv("database.csv", fileEncoding = "UTF-8")
pacman::p_load(quanteda)
library(stringr)
DATAPROVA <- data_parties
DATAPROVA <- DATAPROVA %>%
mutate(created_at = as.character(created_at))%>%
separate(created_at,c("Date","Hour"),  " ", remove = FALSE)
DATAPROVA <- DATAPROVA %>%
mutate(Date = as.Date(Date)) %>%
filter(Date > "2020-09-19")
DATAPROVA2 <- DATAPROVA%>%
group_by(screen_name, is_retweet) %>%
summarize(n=n())%>%
mutate(prop=n/sum(n))%>%
subset(select=c("screen_name","is_retweet","prop"))%>%
spread(screen_name, prop)
# 4. Eliminación de ruido - Objetos particulares de Twitter que no son texto
DATAPROVA$ctext <- gsub("\\@[A-z0-9_\\.]+", "", DATAPROVA$text) # usuarios
DATAPROVA$ctext <- gsub("#[A-z0-9_\\.]+", "", DATAPROVA$ctext) # Hashtags
DATAPROVA$ctext <- gsub(" ?(f|ht)(tp)(s?)(://)(.*)[.|/](.*)", "", DATAPROVA$ctext) # urls
der <- corpus(DATAPROVA$ctext)
docvars(der, "id") <- DATAPROVA$status_id
docvars(der, "Usuario") <- DATAPROVA$screen_name
docvars(der, "Retweet") <- DATAPROVA$is_retweet
toks <- tokens(der, what = "word",
remove_url = T,
remove_numbers = T,
remove_punct = T,
remove_symbols = T,
remove_separators = T,
verbose = quanteda_options("verbose"),
include_docvars = TRUE)
#minimum 3 characters
toks <- tokens_remove(toks, min_nchar=3)
# 8. Transformación del texto
# 8.2. Stopwords
stopwords("spanish")
# 8. Transformación del texto
# 8.2. Stopwords
stopwords("spanish")
toks <- tokens_remove(toks, stopwords("spanish"))
# 9. Partición - representación de las frecuencias
# Matriz de documento-atributo (términos)
DATAPROVA <- DATAPROVA(toks)
# 9. Partición - representación de las frecuencias
# Matriz de documento-atributo (términos)
DATAPROVA <- DATAPROVA(toks)
?dfm
# 9. Partición - representación de las frecuencias
# Matriz de documento-atributo (términos)
dfm <- dfm(toks)
# 9. Partición - representación de las frecuencias
# Matriz de documento-atributo (términos)
dfm <- dfm(toks)
summary(dfm)
ndoc(dfm)
# Visualizar la matriz como marco de datos (10 documentos y diez atributos)
dfm.df <- convert(dfm[1:15,1:15], to="data.frame")
View(dfm.df)
# Visualizar la matriz como marco de datos (10 documentos y diez atributos)
dfm.df <- convert(dfm[1:100,1:100], to="data.frame")
View(dfm.df)
# Visualizar la matriz como marco de datos (10 documentos y diez atributos)
dfm.df <- convert(dfm[1:400,1:400], to="data.frame")
View(dfm.df)
# Visualizar la matriz como marco de datos (10 documentos y diez atributos)
dfm.df <- convert(dfm[1:1000,1:1000], to="data.frame")
# Matriz dispersa - sumas de filas y columnas)
head(rowSums(dfm), 10)
head(colSums(dfm), 10)
DATAPROVA$ctext <- gsub("\\d")
DATAPROVA$ctext <- gsub("\\d", "", DATAPROVA$ctext)
der <- corpus(DATAPROVA$ctext)
docvars(der, "id") <- DATAPROVA$status_id
docvars(der, "Usuario") <- DATAPROVA$screen_name
docvars(der, "Retweet") <- DATAPROVA$is_retweet
toks <- tokens(der, what = "word",
remove_url = T,
remove_numbers = T,
remove_punct = T,
remove_symbols = T,
remove_separators = T,
verbose = quanteda_options("verbose"),
include_docvars = TRUE)
toks <- tokens(der, what = "word",
remove_url = T,
remove_numbers = T,
remove_punct = T,
remove_symbols = T,
remove_separators = T,
verbose = quanteda_options("verbose"),
include_docvars = TRUE)
#minimum 3 characters
toks <- tokens_remove(toks, min_nchar=3)
toks <- tokens_remove(toks, stopwords("spanish"))
dfm <- dfm(toks)
# Visualizar la matriz como marco de datos (10 documentos y diez atributos)
dfm.df <- convert(dfm[1:1000,1:1000], to="data.frame")
View(dfm.df)
# Matriz dispersa - sumas de filas y columnas)
head(rowSums(dfm), 10)
#### Distribución de frecuencia
textstat_frequency(dfm, n = 1000) %>%
ggplot(aes(x = rank, y = frequency)) +
geom_point() +
labs(x = "Frequency rank", y = "Term frequency")
head(colSums(dfm), 10)
# Visualizar la matriz como marco de datos (10 documentos y diez atributos)
dfm.df <- convert(dfm[1:100000,1:100000], to="data.frame")
# Visualizar la matriz como marco de datos (10 documentos y diez atributos)
dfm.df <- convert(dfm[1:10000,1:10000], to="data.frame")
#### Distribución de frecuencia
textstat_frequency(dfm, n = 1000) %>%
ggplot(aes(x = rank, y = frequency)) +
geom_point() +
labs(x = "Frequency rank", y = "Term frequency")
# Atributos más importantes
topfeatures(dfm, 50)
# Atributos más importantes
topfeatures(dfm, 50, group = screen_name)
textstat_frequency(dfm, n = 1000) %>%
ggplot(aes(x = rank, y = frequency)) +
geom_point() +
labs(x = "Frequency rank", y = "Term frequency")
textstat_frequency(dfm, n = 1000) %>%
ggplot(aes(x = rank, y = frequency)) +
geom_point() +
labs(x = "Frequency rank", y = "Term frequency")+
facet_wrap(screen_name)
freq <- textstat_frequency(dfm, n = 10, groups = docvars(dfm, 'Usuario'))
freq
dfm %>%
textstat_frequency(n = 15, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()
freq <- textstat_frequency(dfm, n = 5, groups = docvars(dfm, 'Usuario'))
dfm %>%
textstat_frequency(n = 5, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()
#minimum 3 characters
toks <- tokens_remove(toks, min_nchar=4)
dfm <- dfm(toks)
freq <- textstat_frequency(dfm, n = 5, groups = docvars(dfm, 'Usuario'))
dfm %>%
textstat_frequency(n = 5, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()
colors = c("red", "blue", "white", "brown", "orange", "pink", "blue", "cyan", "yellow", "black", "purple", "gray", "chartreuse","bisque","aquamarine")
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=colors)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()
colors = c("red", "blue", "white", "brown", "orange", "pink", "blue", "cyan", "yellow", "black", "purple", "gray", "chartreuse","aquamarine")
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=colors)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()+ scale_fill_brewer(palette="Dark2")
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point(color = colors) +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point(scale_fill_brewer(palette="Dark2")) +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()+
scale_color_brewer(palette="Dark2")
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()+
scale_color_brewer(type = "qual")
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()+
scale_color_brewer(type = "seq")
mycolors <- colorRampPalette(brewer.pal(8, "Set2"))(nb.cols)
install.packages("RColorBrewer")
library(RColorBrewer)
library(RColorBrewer)
mycolors <- colorRampPalette(brewer.pal(8, "Set2"))(nb.cols)
library(RColorBrewer)
mycolors <- colorRampPalette(brewer.pal(8, "Set2"))(nb.cols)
mycolors <- colorRampPalette(brewer.pal(8, "Set2"))(15)
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()+
scale_fill_manual(values = mycolors)
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()+
scale_color_manual(values = mycolors)
mycolors <- colorRampPalette(brewer.pal(8, "Set3"))(15)
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()+
scale_color_manual(values = mycolors)
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()+
scale_color_manual(values = colors)
colors = c("red", "blue", "darkgreen", "brown", "orange", "pink", "blue", "cyan", "yellow", "black", "purple", "gray", "chartreuse","aquamarine")
dfm %>%
textstat_frequency(n = 4, groups = docvars(dfm, 'Usuario')) %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency, color=group)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_minimal()+
scale_color_manual(values = colors)
# Nube de términos - tagcloud
textplot_wordcloud(dfm, max_words = 100)
# Nube de términos comparada
# Comparación por Usuario
dfm.user <- dfm(toks, groups = "Usuario")
textplot_wordcloud(dfm.user, comparison = TRUE, max_words = 100)
textplot_wordcloud(dfm.user, max_words = 100)
textplot_wordcloud(dfm.user, comparison = TRUE, max_words = 100)
# 1.2. Términos en contexto
#  ¿Cómo se usan palabras clave en su contexto?
ind.kw <- kwic(toks, 'gobierno')
head(ind.kw, 10)
# Gráfico de dispersión léxica
textplot_xray(ind.kw)
